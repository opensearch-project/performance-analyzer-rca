name: Java CI

on: 
  push: 
    branches: 
      - "*"

  pull_request:
    branches: 
      - "*"

jobs:
  build_rca_pkg:
    runs-on: [ubuntu-latest]
    name: Building RCA package
    steps:
    - name: Checkout RCA package
      uses: actions/checkout@v2
      with:
        path: ./tmp/performance-analyzer-rca
    # fetch the main branch to make it available for spotless ratcheting
    - name: Fetch 'main' branch
      working-directory:  ./tmp/performance-analyzer-rca
      run: git fetch --depth=1 origin main
    - name: Checkout Performance Analyzer package
      uses: actions/checkout@v2
      with:
        repository: opensearch-project/performance-analyzer
        path: ./tmp/pa
    - name: Set up JDK 1.12
      uses: actions/setup-java@v1
      with:
        java-version: 1.12
    - name: Build RCA with Gradle
      working-directory:  ./tmp/performance-analyzer-rca
      run: ./gradlew build --stacktrace
    - name: Upload reports
      uses: actions/upload-artifact@v2
      with:
        name: gradle-reports
        path: ./tmp/performance-analyzer-rca/build/reports
    - name: Generate Jacoco coverage report
      working-directory: ./tmp/performance-analyzer-rca
      run: ./gradlew jacocoTestReport
    - name: Upload coverage report
      working-directory: ./tmp/performance-analyzer-rca
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: bash <(curl -s https://codecov.io/bash) -f ./build/reports/jacoco/test/jacocoTestReport.xml
    - name: Publish RCA jar to maven local
      working-directory: ./tmp/performance-analyzer-rca
      run: ./gradlew publishToMavenLocal
    - name: Build PA gradle using the new RCA jar
      working-directory: ./tmp/pa
      run: rm -f licenses/performanceanalyzer-rca-1.0.0.0.jar.sha1
    # PA depends on OpenSearch. Checkout and publish to maven local for PA build.
    - name: Checkout OpenSearch
      uses: actions/checkout@v2
      with:
        repository: 'opensearch-project/OpenSearch'
        path: OpenSearch
        ref: '1.0'
    - name: Build OpenSearch
      working-directory: ./OpenSearch
      run: ./gradlew publishToMavenLocal -Dbuild.snapshot=false
    - name: Update SHA
      working-directory: ./tmp/pa
      run: ./gradlew updateShas
    - name: Set docker-compose path
      run: echo "DOCKER_COMPOSE_LOCATION=$(which docker-compose)" >> $GITHUB_ENV
      # Set the vm.max_map_count system property to the minimum required to run OpenSearch
    - name: Set vm.max_map_count
      run: sudo sysctl -w vm.max_map_count=262144
    - name: Build PA and run Unit Tests
      working-directory: ./tmp/pa
      run: ./gradlew build -i
    - name: Spin up Docker cluster for integ testing
      working-directory: ./tmp/performance-analyzer-rca
      run: ./gradlew enableRca
    - name: Run integration tests
      working-directory: ./tmp/pa
      run: ./gradlew integTest --info --stacktrace -Dtests.enableIT=true
